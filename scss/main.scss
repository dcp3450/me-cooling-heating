$grid-columns: 19;
$column: 55;
$max-width: 1153px;
$visual-grid: false;
$visual-grid-index: front;
$visual-grid-color: blue;
$basepx: 16;

// Imports
@import "bourbon","neat/neat";
@import "reset";
@import "fonts";
@import "colors";

//vars
$borderRadius: 5px;

//breakpoints
$largeDesktop: new-breakpoint(min-width 1153px);
$standardDesktop: new-breakpoint(min-width 769px max-width 1023px); //between standard 1024 and the lowest desktop size
$smallDesktop: new-breakpoint(min-width 769px max-width 1152px);
$allDesktop: new-breakpoint(min-width 769px); //desktop only
$allMobile: new-breakpoint(max-width 768px); //mobile only
$smallDevices: new-breakpoint(max-width 639px);
$tablet: new-breakpoint(min-width 640px max-width 768px); //standard tablets such as ipads
$smallTablet: new-breakpoint(min-width 480px max-width 639px); //small tablets, mostly androids
$phone: new-breakpoint(max-width 479px); //larger phones
$smallPhone: new-breakpoint(max-width 320px); //small phones, mostly iphone

// Convert PX to EM global function
@function pxtoem($px, $basepx){
    @return ($px/$basepx)+0em;
}

/* setup, base html elements, universal settings */
//used to keep content centered on wide screns
.container {
	@include outer-container;
	
	//adding padding on smaller screens so text doesn't touch the edges
	@include media($smallDesktop){
		padding: 0 2%;
	}
	
	@include media($allMobile){
		padding: 0 2%;
	}
}

body {
	//set the default font color, family, size, etc. padding accounts the for the fixed header
	color: $bodyText;
	font-family: "GothamBookRegular", helvetica, arial, sans-serif;
	font-size: 16px;
	line-height: 24px;
	padding-top: 100px;
	
	//adjust padding for the changing header height
	@include media($smallTablet) {
		padding-top: 78px;
	}
	
	@include media($phone) {
		padding-top: 78px;
	}
}

img {
	//remove space from images
	vertical-align: bottom;
	
	//the image shadow in the first article
	&.img-shadow {
		box-shadow: 15px 15px 0 #d9dce3;
	}
}

//used to align elemnts as needed
.align-center {
	text-align: center;
}

//global button class for forms and styled elements
.button {
	background: $button;
	border-radius: 4px;
	color: white;
	cursor: pointer;
	font-family: "GothamBookRegular", helvetica, arial, sans-serif;
	font-size: 0.797em;
	line-height: 1.584em;
	padding: 10px 20px;
	position: relative;
	text-align: center;
	text-decoration: none;
	text-transform: uppercase;
	transition: all .2s ease-in-out;
	
	&:hover {
		background: tint($button,10%);
	}
	
	&.download:after { //using a class with after instead of a direct image to make adding more and making changes easier
		@include position(absolute,8px 20px null null);
		content: url("../img/pdf-icon.png");
		height: 17px;
		width: 17px;
	}
	
	&.icon {
		padding-right: 40px; //double the padding to allow for icons
	}
}

.title,
h2 { //title and h2 are the same layout mostly but used in different ways
	color: $headings;
	font-family: "GothamBookRegular", helvetica, arial, sans-serif;
	font-size: pxtoem(30,$basepx);
	line-height: pxtoem(25.93,$basepx);
	margin-bottom: 40px;
	position: relative;
	
	&:after {
		@include position(absolute,null null -7px 0);
		background: $headingBorder;
		content: "";
		height: 2px;
		width: 110px;
	}
}

h4 {
	color: black;
	font-family: "GothamBookRegular", helvetica, arial, sans-serif;
	font-size: pxtoem(14,$basepx);
	line-height: pxtoem(14,$basepx);
	text-transform: uppercase;
}

/* header */
header {
	@include position(fixed, 0 null null 0);
	background: white;
	box-shadow: 0 6px 9px rgba(0,0,0,.06);
	height: 100px;
	padding: 14px 0;
	width: 100%;
	z-index: 100;
	
	//adjust the height since the screen is smaller and the logo is adjusting to it
	@include media($smallTablet) {
		height: 78px;
	}
	
	@include media($phone) {
		height: 78px;
	}
	
	.logo {
		@include span-columns(2.8);
		height: auto;
		
		//adjust logo to look best of different sizes
		@include media($tablet) {
			@include span-columns(3.8);
		}
		
		@include media($smallTablet) {
			@include span-columns(3.8);
		}
		
		@include media($phone) {
			@include span-columns(5);
		}
		
		@include media($smallPhone) {
			@include span-columns(7.4);
		}
	}
}

/* hero */
#hero {
	background: white url('../img/hero.jpg') no-repeat 50% 0;
	background-size: cover; //I wanted to use cover instead of a raw image so the image would be a persistant background regardless of width
	float: left; //float and width 100 are used quite a bit since the grid layout is float based
	width: 100%;
	
	.hero-content {
		display: table; //I want to keep all text vertical centered even if the text changes, wraps, or get rendered by the browser different
		height: 367px;
		margin-left: 75px;
		
		@include media($phone) {
			margin: 0 auto;
		}
	}
	
	//using this to center the content as well as set the width for the content area
	.content {
		@include span-columns(11);
		display: table-cell;
		float: none;
		vertical-align: middle;
		width: 580px;
		
		//adjust width based on screen size to prevent a horizontal scrollbar
		@include media($smallTablet) {
			width: 470px;
		}
		
		@include media($phone) {
			width: 300px;
		}
	}
	
	.title {
		margin-bottom: 20px;
		text-transform: uppercase;
		
		//adjust the font size of the title down since it has limited room
		@include media($phone) {
			font-size: pxtoem(20,$basepx);
			line-height: pxtoem(20.93,$basepx);
		}
	}
	
	.text {
		color: $bodyText;
		font-size: 1em;
		line-height: 1.5em;
		margin-bottom: 40px;
	}
	
	.button {
		display: block;
		width: 165px;
	}
}

//section / articles
section {
	float: left; //float and width used again to prevent collapsing on floated children elements
	width: 100%;
}

article,
footer {
	float: left;
	padding: 80px 0; //the design was inconsistant here. I used the closest padding they had in common to keep the layout uniform
	width: 100%;
	
	//the content is smaller and shifted from the rest of the site
	.content {
		@include span-columns(16);
		@include shift(2);
		
		@include media($smallDesktop) {
			@include span-columns(14.7);
		}
	}
	
	.left {
		@include span-columns(6.9 of 16);
		
		p {
			padding-left: 20px; //the paragraphs in this area is shifted
		}
		
		@include media($allMobile) {
			margin-bottom: 20px; //on mobile this is stacked so space is needed
		}
	}
	
	.right {
		@include span-columns(7.1 of 16);
		@include shift(2);
	}
	
	.left,
	.right {
		img {
			width: 100%;
		}
		
		@include media($allMobile) {
			@include shift(0);
			
			float: none;
			width: 100%;
		}
	}
	
	&.dark {
		background: #e9ebef;
	}
}

//tabs
.tabs {
	margin-bottom: 40px;
	width: 100%;
	
	li {
		border-left: 4px transparent solid; //the border has to be preset or it will shift the tabs too much
		cursor: pointer;
		display: inline-block;
		margin-right: -4px; //inline block has a foced 4px margin on elements. this is added to allow for better control over spacing of elements
		padding: 23px 0; //I need the span to control the small borders so only top and bottom are set here
		transition: all .2s ease-in-out; //wanted to animate the active change
		
		@include media($standardDesktop) {
			padding: 15px 0;
		}
		@include media($allMobile) {
			display: none;
		}
		
		span {
			border-left: 1px $tabBorder solid; //border only the left of the span elements since the height is only has high as the text
			color: $tabs;
			display: block;
			font-family: "GothamBookRegular", helvetica, arial, sans-serif;
			font-size: pxtoem(13,$basepx);
			line-height: pxtoem(13,$basepx);
			padding: 0 15px;
			text-transform: uppercase;
			
			@include media($standardDesktop) {
				font-size: pxtoem(12,$basepx);
				line-height: pxtoem(12,$basepx);
				padding: 0 5px;
			}
		}
		
		&.active {
			background: white;
			border-color: $tabBorder; //change the border from transparent
			box-shadow: 0 0 19px rgba(0,0,0,.07);
			
			span {
				border: none; //if it's active don't show the span's border it would cause a dobule border
				font-family: "GothamBoldRegular", helvetica, arial, sans-serif;
				font-weight: bold;
			}
			
			& + li span {
				border: none; //the span right next to the active li has a border that looks ugly, this hides it
			}
		}
			
		&:first-child {
			
			span {
				border-left: none; //we don't want any leading borders, only between items
			}
		}
	}
}

.mobile-tabs {
	background: $inputBg;
	border: 2px $inputBorder solid;
	border-radius: 5px;
	display: none;
	margin-bottom: 40px;
	padding: 10px;
	width: 100%;
	
	@include media($allMobile){
		display: block;
	}
}

.tab-target {
	border-left: 4px $tabBorder solid;
	margin-bottom: 40px;
	
	@include media($phone){ //I moved the border to the top on mobile since we stacked it. it leads the eye better: top/down on mobile ; left/right on desktop
		border-left: none;
		border-top: 4px $tabBorder solid;
	}
	
	.target {
		background: white;
		box-shadow: 0 0 19px rgba(0,0,0,.07);
		display: none;
		height: 140px;
		width: 750px;
				
		&.active {
			display: block;
		}
		
		@include media($standardDesktop) {
			width: auto;
		}
		
		@include media($allMobile) {
			width: auto;
		}
		
		@include media($phone) {
			height: auto;
			text-align: center;
		}
	}
	
	.icon-box {
		display: table; //I want to keep it vetically centered so display table and height need to be set
		height: 140px;
		width: 16%;
		
		@include media($phone) {
			height: auto;
		}
	}
	
	.icon {
		display: table-cell; //I want to keep it vetically centered so display table-cell
		vertical-align: middle;
		
		@include media($phone){
			display: inline-block;
			padding: 20px 0;
		}
		
		span { //I like having the cirlce be an element for furture changes for brand or department
			background: #e9ebef;
			border-radius: 50%;
		    box-shadow: 2px 2px 0px #d9dee8;
			display: block;
			height: 49px;
			margin: 0 auto;
			padding: 12px 0;
			text-align: center;
			width: 49px;
		}
	}
	
	.details {
		display: table; //I want to keep it vetically centered so display table and height need to be set
		height: 140px;
		width: 84%;
		
		@include media($allMobile) {
			padding: 0 2%;
		}
		
		@include media($phone) {
			height: auto;
			padding: 0 20px 20px 20px;
		}
		
		p {
			display: table-cell; //I want to keep it vetically centered so display table-cell
			vertical-align: middle;
		}
	}
	
	.icon-box,
	.details {
		float: left;
		
		@include media($phone){ //stack areas on phones
			display: block;
			float: none;
			width: 100%;
		}
	}
}

//footer
footer {
	background: $footer;
	color: $footerText;
	padding-bottom: 20px;
	padding-top: 75px;
	
	.logo { //set the logo width and shift it's position based on design. this changes from screen to screen
		@include span-columns(3 of 16);
		@include shift(.56);
		height: auto;
		
		@include media($smallTablet) {
			@include span-columns(6 of 16);
			@include shift(0);
			float: none;
			margin: 0 auto 20px auto;
		}
		
		@include media($phone) {
			@include span-columns(8 of 16);
			@include shift(0);
			float: none;
			margin: 0 auto 20px auto;
		}
	}
	
	.social-menu { //wrap the social and footer menu then set their width and shift it's position based on design. this changes from screen to screen
		@include span-columns(9.7 of 16);
		@include shift(1.15 of 16);
		margin-bottom: 55px;
		
		@include media($standardDesktop) {
			@include span-columns(10.5 of 16);
		}
		
		@include media($smallTablet) {
			@include shift(0);
			width: 100%;
		}
		
		@include media($phone) {
			@include shift(0);
			width: 100%;
		}
	}
	
	.social {
		border-bottom: 2px rgba(150,150,150,.15) solid;
		display: table; //I'm not vertically aligning here. I'm using the table/table-cell combo to evenly space elements
		margin-bottom: 20px;
		padding-bottom: 20px;
		width: 100%;
		
		li {
			display: table-cell; //I'm not vertically aligning here. I'm using the table/table-cell combo to evenly space elements
			padding-right: 7.5%;
			
			@include media($smallDesktop) { //adjusting to fill in as much space as possible
				padding-right: 5.5%;
			}
			
			@include media($allMobile) { //adjusting to fill in as much space as possible
				padding-right: 3.5%;
			}
			
			@include media($phone) { //stacking to fill 2 rows since there isn't enough room
				float: left;
				display: block;
				margin-bottom: 10px;
				padding-right: 0;
				width: 25%;
			}
			
			&:last-child {
				padding-right: 0;
			}
		}
		
		a {
			background: $social;
			border-radius: 50%;
			color: $footer;
			display: block;
			font-size: pxtoem(16,$basepx);
			height: 33px;
			line-height: pxtoem(35,$basepx);
			text-align: center;
			transition: all .2s ease-in-out;
			width: 33px;
			
			@include media($phone) { //center the block level elements on phones
				margin: 0 auto;
			}
			
			&:hover {
				background: $main;
			}
		}
		
		.blog { //blog had to be targeted spacifically since it's an image
			line-height: pxtoem(29,$basepx);
		}
	}
	
	.menu {
		width: 100%;
		
		li {
			border-right: 1px $footerBorder solid;
			display: block;
			float: left;
			padding: 0 12px;
			
			@include media($smallDesktop) {
				font-size: pxtoem(14, $basepx);
				padding: 0 5px;
			}
			
			@include media($standardDesktop) { //splitting them to two lines on mobile
				margin-bottom: 10px;
				padding: 0px;
				text-align: center;
				width: 33%;
				
				&:nth-child(3n) {
					border-right: none;
				}
				
				&:nth-child(n+4) {
					margin-bottom: 0;
				}
			}
			
			@include media($allMobile) {
				margin-bottom: 10px;
				padding: 0px;
				text-align: center;
				width: 33%;
				
				&:nth-child(3n) {
					border-right: none;
				}
				
				&:nth-child(n+4) {
					margin-bottom: 0;
				}
			}
			
			@include media($smallPhone) { //moving border to bottom and stacking the menu for phones
				border-bottom: 1px $footerBorder solid;
				border-right: 0;
				margin-bottom: 10px;
				padding: 0 0 10px 0;
				text-align: center;
				width: 100%;
				
				&:nth-child(n+4) {
					margin-bottom: 10px;
				}
			}
			
			&:last-child {
				border-right: none;
			}
			
			&:first-child {
				padding-left: 0;
			}
		}
		
		a {
			color: $footerText;
			display: block;
			font-size: pxtoem(13.32,$basepx);
			line-height: pxtoem(13.32,$basepx);
			text-decoration: none;
			transition: all .2s ease-in-out;
			
			&:hover {
				color: $main;
			}
		}
	}
	
	.copyright {
		float: left;
		font-size: pxtoem(10.47,$basepx);
		line-height: pxtoem(15.3,$basepx);
		width: 100%;
	}
}

/* overlay / popup background */
#overlay {
	@include position(fixed,0 null null 0);
	background: #003d75;
	background: rgba(0,61,117,.7);
	height: 100%;
	opacity: 0;
	transition: all .2s ease-in-out;
	visibility: hidden;
	width: 100%;
	z-index: 101;
	
	&.active {
		opacity: 1;
		visibility: visible;
	}
}

/* forms / popups */
.form-container {
	@include position(absolute,40px null null 50%);
	background: white;
	//display: none;
	opacity: 0;
	padding: 90px;
	transform: translateX(-50%);
	transition: all .2s ease-in-out;
	visibility: hidden;
	width: 936px;
	z-index: 102;
	
	@include media($standardDesktop) {
		width: 740px;
	}
	
	@include media($tablet) {
		padding: 60px;
		width: 630px;
	}
	
	@include media($smallTablet) {
		padding: 40px;
		width: 460px;
	}
	
	@include media($phone) {
		padding: 20px;
		width: 300px;
	}
	
	&.active {
		opacity: 1;
		visibility: visible;
	}
	
	.title,
	.intro { //the titles and text are centered only on the popup, styles are the same otherwise
		text-align: center;
	}
	
	.title {
		@include media($phone) {
			font-size: pxtoem(20,$basepx);
			line-height: pxtoem(20.93,$basepx);
		}
		
		&:after {
			left: 50%;
			transform: translateX(-50%);
		}
	}
	
	.intro {
		margin-bottom: 70px;
	}
	
	.thank-you,
	.no-send {
		color: #003d75;
		display: none;
		margin-bottom: 20px;
		text-align: center;
	}
	
	.no-send {
		color: red;
	}


	.form-inputs {
		float: left;
		border-bottom: 1px #e9e9e9 solid;
		margin-bottom: 40px;
		width: 100%;
	}
	
	.row {
		float: left;
		margin-bottom: 40px;
		width: 100%;
		
		@include media($smallTablet) {
			margin-bottom: 0;
		}
		
		@include media($phone) {
			margin-bottom: 0;
		}
	}
	
	.input-cell {
		float: left;
		margin-right: 2.6490066225%; //I calculated these instead of using the grid system directly as it was esier with this design
		width: 47.682119205%; //I calculated these instead of using the grid system directly as it was esier with this design
	
		@include media($smallTablet) {
			margin-bottom: 20px;
			margin-right: 0;
			width: 100%;
		}
	
		@include media($phone) {
			margin-bottom: 20px;
			margin-right: 0;
			width: 100%;
		}
		
		label {
			font-size: pxtoem(12.76,$basepx);
			text-transform: uppercase;
			line-height: pxtoem(25.37,$basepx);
			width: 100%;
		}
		
		input {
			background: $inputBg;
			border: 2px $inputBorder solid;
			border-radius: 5px;
			padding: 10px;
			width: 100%;
			
			&.error {
				border-color: red;
			}
		}
		
		&:last-child{
			margin-right: 0;
		}
	}
	
	.required { //using a class to add the star to make it easier for future use and adding in inputs
		label:before{
			color: red;
			content: "* "
		}
	}
	
	input[type="submit"] {
		appearance: none;
		border: none;
		width: 200px;
	}
}